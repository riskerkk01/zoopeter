<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">


	<!-- <context:property-placeholder location="classpath:web-application.properties" ignore-resource-not-found="true" ignore-unresolvable="true"/> -->

	<context:component-scan base-package="zoopeter"/>

	<!--
	Example defining an external datasource that would have properties
	populated when maven runs filter
	If for example running HSQL as separate process:

	<bean id="empDS" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${db.driver}"/>
		<property name="url" value="${db.url}"/>
		<property name="username" value="${db.username}"/>
		<property name="password" value="${db.password}"/>
	</bean>
	-->

	<!-- for simplicity in this demo using an embedded HSQL datasource -->
	<!-- <jdbc:embedded-database id="empDS" type="HSQL">
		<jdbc:script location="classpath:/db.script" />
	</jdbc:embedded-database> -->

<!-- Root Context: defines shared resources visible to all other web components -->
    <bean  id="dataSourceSpied" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://my5701.gabiadb.com:3306/zoopeterdb?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;useAffectedRows=true" />
        <property name="username" value="zoopeter" />
        <property name="password" value="zooroi1101@" />
        <property name="validationQuery" value="select 1" />
        <property name="testOnBorrow" value="true" />
    </bean>

	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSourceSpied" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE" />
				<property name="sqlPrefix" value="SQL : "/>
			</bean>
		</property>
	</bean>
    
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory" />
    </bean>
    
    
	<import resource="classpath:spring/root-context.xml"/>
	
</beans>
